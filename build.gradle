buildscript {

    ext {
        versions = [
                'kotlin' : '1.3.41',
                'kotlin_coroutines' : '1.3.0-RC',
                'android_gradle' : '3.4.2',
                'androidx' : [
                        'core' : '1.0.2',
                        'annotation' : '1.1.0',
                        'appcompat' : '1.0.2',
                        'drawerlayout' : '1.0.0',
                        'leanback' : '1.0.0',
                        'recycler_view' : '1.0.0',
                        'slidingpane_layout' : '1.0.0',
                        'swiperefresh_layout' : '1.0.0',
                        'viewpager' : '1.0.0',
                        'material' : '1.0.0'
                ]
        ]

        deps = [
                'kotlin': [
                        'stdlib': [
                                'jdk': "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"
                        ],
                        'coroutines': [
                                'jdk8': "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:${versions.kotlin_coroutines}",
                                'android': "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.kotlin_coroutines}"
                        ]
                ],
                'androidx': [
                        'core': "androidx.core:core:${versions.androidx.core}",
                        'annotation': "androidx.annotation:annotation:${versions.androidx.annotation}",
                        'appCompat': "androidx.appcompat:appcompat:${versions.androidx.appcompat}",
                        'drawerLayout': "androidx.drawerlayout:drawerlayout:${versions.androidx.drawerlayout}",
                        'leanback': "androidx.leanback:leanback:${versions.androidx.leanback}",
                        'recyclerView': "androidx.recyclerview:recyclerview:${versions.androidx.recycler_view}",
                        'slidingPaneLayout': "androidx.slidingpanelayout:slidingpanelayout:${versions.androidx.slidingpane_layout}",
                        'swipeRefreshLayout': "androidx.swiperefreshlayout:swiperefreshlayout:${versions.androidx.swiperefresh_layout}",
                        'viewPager': "androidx.viewpager:viewpager:${versions.androidx.viewpager}"
                ],
                'material': "com.google.android.material:material:${versions.androidx.material}"
        ]

        buildConfig = [
                'compileSdk': 28,
                'minSdk': 16,
        ]
    }

    // -------------------------------------------------------------------------------------------

    repositories {
        mavenCentral()
        google()
        jcenter()
    }

    // -------------------------------------------------------------------------------------------

    dependencies {
        // Android gradle
        classpath "com.android.tools.build:gradle:${versions.android_gradle}"

        // Kotlin
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
    }

}

// -----------------------------------------------------------------------------------------------

plugins {
    id 'com.github.ben-manes.versions' version '0.21.0'
}

// ------------------------------------------------------------------------------------------------

subprojects {

    repositories {
        mavenCentral()
        google()
        jcenter()
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

}

// ------------------------------------------------------------------------------------------------

task clean(type: Delete) {
    delete rootProject.buildDir
}

// ------------------------------------------------------------------------------------------------

configurations.all {
    resolutionStrategy {
        eachDependency { details ->
            // Force all Kotlin stdlib artifacts to use the same version.
            if (details.requested.group == 'org.jetbrains.kotlin'
                    && details.requested.name.startsWith('kotlin-stdlib')) {
                details.useVersion versions.kotlin
            }
        }
    }
}

// ------------------------------------------------------------------------------------------------

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}
